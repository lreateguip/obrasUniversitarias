/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import BotonTabla.myeditor;
import BotonTabla.myrenderer;
import Validaciones.Validaciones;
import com.toedter.calendar.JTextFieldDateEditor;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Locale;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import modelo.bodegaDTO.Ekardex;
import modelo.bodegaDTO.DetalleEgresoProducto;
import modelo.bodegaDTO.DetalleIngresoProducto;
import modelo.bodegaDTO.Ikardex;
import modelo.bodegaDTO.Orden;
import modelo.bodegaDTO.Producto;
import modelo.operacionesDAO.Consulta;
import modelo.operacionesDAO.ConsultaIE;
import modelo.operacionesDAO.KEgreso;
import modelo.operacionesDAO.KIngreso;

/**
 *
 * @author Ricky
 */
public class Bodega extends javax.swing.JFrame {

    /**
     * Creates new form Bodega
     */
    public Bodega() {
        initComponents();
        
        //Egreso de Materiales
        cargar_productos();
        editor_fecha();
        btnIngresar.setEnabled(false);
        txtCantidad.setEditable(false);
        
        //Ingreso de Materiales
        cargar_productosI();
        editor_fechaI();
        btnIngresarI.setEnabled(false);
        txtCantidadI.setEditable(false);
        
        btnConsultarIE.setEnabled(false);
        btnEliminarIE.setEnabled(false);
        btnEliminarDetalle.setEnabled(false);
        

    }
    
    
    ArrayList<Ekardex> listaegresos;
    ArrayList<Ikardex> listaingresos;
    
    ArrayList<Orden> lista;
    
    ArrayList<DetalleEgresoProducto> listadetalles = new ArrayList<>();
    ArrayList<DetalleIngresoProducto> listadetallesI = new ArrayList<>();
    
    ArrayList<Producto> listaproductos;
    ArrayList<Producto> listacantidades;

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        PanelBodega = new javax.swing.JTabbedPane();
        Orden = new javax.swing.JPanel();
        OrdenInterno = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jButton4 = new javax.swing.JButton();
        ConsultaO = new javax.swing.JPanel();
        ScrollOrden = new javax.swing.JScrollPane();
        tblOrden = new javax.swing.JTable();
        INGRESO = new javax.swing.JPanel();
        IngresoInterno = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblIngresos = new javax.swing.JTable();
        btnSubirOrdenI = new javax.swing.JButton();
        jdtFechaI = new com.toedter.calendar.JDateChooser();
        txtOrdenI = new javax.swing.JTextField();
        txtDescripcionI = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        txtCantidadI = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        txtValorUnitarioI = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        txtTotalI = new javax.swing.JTextField();
        btnIngresarI = new javax.swing.JButton();
        cmbProductoI = new javax.swing.JComboBox<>();
        txtTituloOrdenI = new javax.swing.JTextField();
        EGRESO = new javax.swing.JPanel();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblegresos = new javax.swing.JTable();
        btnSubirOrden = new javax.swing.JButton();
        txtOrden = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtDescripcion = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtValorUnitario = new javax.swing.JTextField();
        txtTotal = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        cmbProducto = new javax.swing.JComboBox<>();
        btnIngresar = new javax.swing.JButton();
        jdtFecha = new com.toedter.calendar.JDateChooser();
        jLabel20 = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        consultaI = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblProductos = new javax.swing.JTable();
        jTextField13 = new javax.swing.JTextField();
        btnConsultar = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        txtFiltro = new javax.swing.JTextField();
        btnEliminarP = new javax.swing.JButton();
        CONSULTAIE = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        txtOrdenConsulta = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        cmbTipoOrden = new javax.swing.JComboBox<>();
        jScrollPane8 = new javax.swing.JScrollPane();
        tblCabezera = new javax.swing.JTable();
        jScrollPane9 = new javax.swing.JScrollPane();
        tblDetalle = new javax.swing.JTable();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        btnConsultarIE = new javax.swing.JButton();
        btnEliminarIE = new javax.swing.JButton();
        btnEliminarDetalle = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 255, 153));

        PanelBodega.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                PanelBodegaAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        Orden.setBackground(new java.awt.Color(204, 255, 204));

        OrdenInterno.setBackground(new java.awt.Color(204, 255, 204));

        jLabel5.setText("N° MEMORANDUM/OFICIO");

        jLabel6.setText("FECHA");

        jLabel7.setText("DD        MM        YYYY");

        jLabel8.setText("SUPERVISOR");

        jLabel9.setText("TÉCNICO");

        jLabel10.setText("FACULTAD");

        jLabel11.setText("BLOQUE");

        jLabel12.setText("DIAGNOSTICO O CAUSA DEL DAÑO");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane4.setViewportView(jTextArea1);

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane5.setViewportView(jTextArea2);

        jLabel13.setText("DETALLES DEL TRABAJO");

        jLabel14.setText("LISTA DE MATERIALES");

        jLabel15.setText("HORA DE LLEGADA");

        jLabel16.setText("HORA DE SALIDA");

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane6.setViewportView(jTextArea3);

        jButton4.setText("Guardar");

        javax.swing.GroupLayout OrdenInternoLayout = new javax.swing.GroupLayout(OrdenInterno);
        OrdenInterno.setLayout(OrdenInternoLayout);
        OrdenInternoLayout.setHorizontalGroup(
            OrdenInternoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OrdenInternoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(OrdenInternoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OrdenInternoLayout.createSequentialGroup()
                        .addGroup(OrdenInternoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(OrdenInternoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(OrdenInternoLayout.createSequentialGroup()
                                .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(OrdenInternoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(OrdenInternoLayout.createSequentialGroup()
                                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(13, 13, 13)
                                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(OrdenInternoLayout.createSequentialGroup()
                                .addGroup(OrdenInternoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(OrdenInternoLayout.createSequentialGroup()
                                        .addGroup(OrdenInternoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(52, 52, 52)
                                        .addGroup(OrdenInternoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(OrdenInternoLayout.createSequentialGroup()
                                                .addComponent(jLabel16)
                                                .addGap(18, 18, 18)
                                                .addComponent(jTextField12))
                                            .addGroup(OrdenInternoLayout.createSequentialGroup()
                                                .addComponent(jLabel15)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 53, Short.MAX_VALUE))))
                    .addGroup(OrdenInternoLayout.createSequentialGroup()
                        .addGroup(OrdenInternoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(OrdenInternoLayout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(jLabel13))
                            .addGroup(OrdenInternoLayout.createSequentialGroup()
                                .addComponent(jButton4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel14)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(OrdenInternoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(OrdenInternoLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(OrdenInternoLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel12)
                        .addGap(46, 46, 46)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        OrdenInternoLayout.setVerticalGroup(
            OrdenInternoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OrdenInternoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(OrdenInternoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(OrdenInternoLayout.createSequentialGroup()
                        .addGroup(OrdenInternoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(OrdenInternoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)))
                    .addGroup(OrdenInternoLayout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(OrdenInternoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(OrdenInternoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(OrdenInternoLayout.createSequentialGroup()
                        .addGroup(OrdenInternoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(OrdenInternoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))
                    .addGroup(OrdenInternoLayout.createSequentialGroup()
                        .addGroup(OrdenInternoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jTextField8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(OrdenInternoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(OrdenInternoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(OrdenInternoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(OrdenInternoLayout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(jLabel12)
                                .addGap(50, 50, 50)
                                .addComponent(jLabel13)
                                .addGap(54, 54, 54)
                                .addComponent(jLabel14)
                                .addContainerGap(62, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OrdenInternoLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton4)
                                .addGap(38, 38, 38))))))
        );

        javax.swing.GroupLayout OrdenLayout = new javax.swing.GroupLayout(Orden);
        Orden.setLayout(OrdenLayout);
        OrdenLayout.setHorizontalGroup(
            OrdenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OrdenLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(OrdenInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(460, Short.MAX_VALUE))
        );
        OrdenLayout.setVerticalGroup(
            OrdenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OrdenLayout.createSequentialGroup()
                .addComponent(OrdenInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        PanelBodega.addTab("ORDEN TRABAJO", Orden);

        tblOrden.setBackground(new java.awt.Color(240, 240, 240));
        tblOrden.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Código", "Descripcion", "Fecha emisión", "Fecha recepción", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblOrden.setColumnSelectionAllowed(true);
        ScrollOrden.setViewportView(tblOrden);
        tblOrden.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);

        javax.swing.GroupLayout ConsultaOLayout = new javax.swing.GroupLayout(ConsultaO);
        ConsultaO.setLayout(ConsultaOLayout);
        ConsultaOLayout.setHorizontalGroup(
            ConsultaOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ScrollOrden, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1046, Short.MAX_VALUE)
        );
        ConsultaOLayout.setVerticalGroup(
            ConsultaOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ConsultaOLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(ScrollOrden, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
                .addGap(78, 78, 78))
        );

        PanelBodega.addTab("CONSULTA ORDENES", ConsultaO);

        INGRESO.setBackground(new java.awt.Color(204, 255, 204));
        INGRESO.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                INGRESOMouseClicked(evt);
            }
        });

        IngresoInterno.setBackground(new java.awt.Color(204, 255, 204));
        IngresoInterno.setLayout(null);

        tblIngresos.setBackground(new java.awt.Color(240, 240, 240));
        tblIngresos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No de Orden", "Producto", "Cantidad", "Valor Unitario", "Total Asignado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblIngresos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tblIngresos.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(tblIngresos);
        tblIngresos.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        IngresoInterno.add(jScrollPane1);
        jScrollPane1.setBounds(10, 140, 1005, 153);

        btnSubirOrdenI.setText("Subir Orden");
        btnSubirOrdenI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubirOrdenIActionPerformed(evt);
            }
        });
        IngresoInterno.add(btnSubirOrdenI);
        btnSubirOrdenI.setBounds(466, 319, 120, 23);
        IngresoInterno.add(jdtFechaI);
        jdtFechaI.setBounds(376, 30, 139, 20);
        IngresoInterno.add(txtOrdenI);
        txtOrdenI.setBounds(10, 20, 120, 20);
        IngresoInterno.add(txtDescripcionI);
        txtDescripcionI.setBounds(186, 30, 130, 20);

        jLabel18.setText("No de Orden:");
        IngresoInterno.add(jLabel18);
        jLabel18.setBounds(40, 0, 110, 14);

        jLabel21.setText("Descripción:");
        IngresoInterno.add(jLabel21);
        jLabel21.setBounds(220, 0, 110, 14);

        jLabel22.setText("Fecha:");
        IngresoInterno.add(jLabel22);
        jLabel22.setBounds(417, 0, 90, 14);

        jLabel23.setText("Producto:");
        IngresoInterno.add(jLabel23);
        jLabel23.setBounds(40, 80, 79, 14);

        jLabel24.setText("Cantidad:");
        IngresoInterno.add(jLabel24);
        jLabel24.setBounds(225, 82, 90, 14);

        txtCantidadI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCantidadIKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCantidadIKeyTyped(evt);
            }
        });
        IngresoInterno.add(txtCantidadI);
        txtCantidadI.setBounds(186, 102, 130, 20);

        jLabel25.setText("ValorUnitario:");
        IngresoInterno.add(jLabel25);
        jLabel25.setBounds(408, 82, 120, 14);

        txtValorUnitarioI.setEditable(false);
        txtValorUnitarioI.setText("0.0");
        IngresoInterno.add(txtValorUnitarioI);
        txtValorUnitarioI.setBounds(376, 102, 139, 20);

        jLabel26.setText("Total Asignado:");
        IngresoInterno.add(jLabel26);
        jLabel26.setBounds(578, 82, 160, 14);

        txtTotalI.setEditable(false);
        txtTotalI.setText("0.0");
        IngresoInterno.add(txtTotalI);
        txtTotalI.setBounds(560, 102, 123, 20);

        btnIngresarI.setText("Ingresar Producto");
        btnIngresarI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarIActionPerformed(evt);
            }
        });
        IngresoInterno.add(btnIngresarI);
        btnIngresarI.setBounds(721, 40, 144, 36);

        cmbProductoI.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbProductoIItemStateChanged(evt);
            }
        });
        IngresoInterno.add(cmbProductoI);
        cmbProductoI.setBounds(10, 100, 130, 20);

        txtTituloOrdenI.setEditable(false);
        txtTituloOrdenI.setBackground(new java.awt.Color(204, 255, 204));
        txtTituloOrdenI.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        txtTituloOrdenI.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTituloOrdenI.setText("Orden de Ingreso");
        txtTituloOrdenI.setBorder(null);
        txtTituloOrdenI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTituloOrdenIActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout INGRESOLayout = new javax.swing.GroupLayout(INGRESO);
        INGRESO.setLayout(INGRESOLayout);
        INGRESOLayout.setHorizontalGroup(
            INGRESOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(INGRESOLayout.createSequentialGroup()
                .addGap(370, 370, 370)
                .addComponent(txtTituloOrdenI, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(INGRESOLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(IngresoInterno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        INGRESOLayout.setVerticalGroup(
            INGRESOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(INGRESOLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(txtTituloOrdenI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(IngresoInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        PanelBodega.addTab("INGRESO MATERIAL", INGRESO);

        EGRESO.setBackground(new java.awt.Color(204, 255, 204));
        EGRESO.setLayout(null);

        jTextField2.setEditable(false);
        jTextField2.setBackground(new java.awt.Color(204, 255, 204));
        jTextField2.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jTextField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField2.setText("Orden de Egreso");
        jTextField2.setBorder(null);
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        EGRESO.add(jTextField2);
        jTextField2.setBounds(380, 0, 263, 33);

        tblegresos.setBackground(new java.awt.Color(240, 240, 240));
        tblegresos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No de Orden", "Producto", "Cantidad", "Valor Unitario", "Total Asignado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblegresos.setColumnSelectionAllowed(true);
        jScrollPane2.setViewportView(tblegresos);
        tblegresos.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        EGRESO.add(jScrollPane2);
        jScrollPane2.setBounds(0, 188, 1046, 173);

        btnSubirOrden.setText("Subir Orden");
        btnSubirOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubirOrdenActionPerformed(evt);
            }
        });
        EGRESO.add(btnSubirOrden);
        btnSubirOrden.setBounds(430, 390, 130, 23);

        txtOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOrdenActionPerformed(evt);
            }
        });
        EGRESO.add(txtOrden);
        txtOrden.setBounds(21, 75, 122, 20);

        jLabel1.setText("No de Orden:");
        EGRESO.add(jLabel1);
        jLabel1.setBounds(47, 50, 80, 14);

        jLabel2.setText("Descripcion:");
        EGRESO.add(jLabel2);
        jLabel2.setBounds(224, 50, 80, 14);
        EGRESO.add(txtDescripcion);
        txtDescripcion.setBounds(188, 75, 122, 20);

        jLabel3.setText("Cantidad:");
        EGRESO.add(jLabel3);
        jLabel3.setBounds(220, 110, 80, 14);

        jLabel4.setText("Valor Unitario:");
        EGRESO.add(jLabel4);
        jLabel4.setBounds(370, 110, 90, 14);

        jLabel17.setText("Total asignado:");
        EGRESO.add(jLabel17);
        jLabel17.setBounds(520, 110, 120, 14);

        txtValorUnitario.setEditable(false);
        txtValorUnitario.setText("0.0");
        txtValorUnitario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValorUnitarioActionPerformed(evt);
            }
        });
        txtValorUnitario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtValorUnitarioKeyReleased(evt);
            }
        });
        EGRESO.add(txtValorUnitario);
        txtValorUnitario.setBounds(360, 150, 122, 20);

        txtTotal.setEditable(false);
        txtTotal.setText("0.0");
        EGRESO.add(txtTotal);
        txtTotal.setBounds(520, 150, 75, 20);

        jLabel19.setText("   Producto:");
        EGRESO.add(jLabel19);
        jLabel19.setBounds(51, 113, 80, 14);

        cmbProducto.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbProductoItemStateChanged(evt);
            }
        });
        EGRESO.add(cmbProducto);
        cmbProducto.setBounds(21, 148, 122, 20);

        btnIngresar.setText("Ingresar Producto");
        btnIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarActionPerformed(evt);
            }
        });
        EGRESO.add(btnIngresar);
        btnIngresar.setBounds(690, 110, 140, 30);
        EGRESO.add(jdtFecha);
        jdtFecha.setBounds(360, 70, 130, 20);

        jLabel20.setText("Fecha:");
        EGRESO.add(jLabel20);
        jLabel20.setBounds(400, 50, 40, 14);

        txtCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCantidadKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCantidadKeyTyped(evt);
            }
        });
        EGRESO.add(txtCantidad);
        txtCantidad.setBounds(190, 150, 120, 20);

        PanelBodega.addTab("EGRESO MATERIAL", EGRESO);

        consultaI.setBackground(new java.awt.Color(255, 255, 255));
        consultaI.setLayout(null);

        tblProductos.setBackground(new java.awt.Color(240, 240, 240));
        tblProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Descripcion", "Tipo Producto", "Casa Comercial", "Stock", "Valor Unitario", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProductos.setColumnSelectionAllowed(true);
        jScrollPane3.setViewportView(tblProductos);
        tblProductos.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);

        consultaI.add(jScrollPane3);
        jScrollPane3.setBounds(320, 70, 700, 350);

        jTextField13.setEditable(false);
        jTextField13.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jTextField13.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField13.setText("INVENTARIO GENERAL");
        jTextField13.setBorder(null);
        jTextField13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });
        consultaI.add(jTextField13);
        jTextField13.setBounds(390, 10, 263, 33);

        btnConsultar.setText("Consultar Todo");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });
        consultaI.add(btnConsultar);
        btnConsultar.setBounds(20, 150, 120, 23);

        jLabel27.setText("Ingrese descripción a buscar:");
        consultaI.add(jLabel27);
        jLabel27.setBounds(20, 80, 170, 14);

        txtFiltro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFiltroKeyReleased(evt);
            }
        });
        consultaI.add(txtFiltro);
        txtFiltro.setBounds(190, 80, 120, 20);

        btnEliminarP.setText("Eliminar");
        btnEliminarP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarPActionPerformed(evt);
            }
        });
        consultaI.add(btnEliminarP);
        btnEliminarP.setBounds(170, 150, 100, 23);

        PanelBodega.addTab("CONSULTA STOCK", consultaI);

        CONSULTAIE.setLayout(null);

        jLabel28.setText("No de Orden:");
        CONSULTAIE.add(jLabel28);
        jLabel28.setBounds(30, 90, 160, 14);

        txtOrdenConsulta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtOrdenConsultaKeyReleased(evt);
            }
        });
        CONSULTAIE.add(txtOrdenConsulta);
        txtOrdenConsulta.setBounds(120, 90, 180, 20);

        jLabel29.setText("Clase de Orden:");
        CONSULTAIE.add(jLabel29);
        jLabel29.setBounds(30, 60, 100, 14);

        cmbTipoOrden.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "Orden de Ingreso", "Orden de Egreso" }));
        cmbTipoOrden.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbTipoOrdenItemStateChanged(evt);
            }
        });
        CONSULTAIE.add(cmbTipoOrden);
        cmbTipoOrden.setBounds(120, 60, 180, 20);

        tblCabezera.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No de Orden", "Descripción", "Fecha", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCabezera.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCabezeraMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(tblCabezera);

        CONSULTAIE.add(jScrollPane8);
        jScrollPane8.setBounds(330, 40, 680, 150);

        tblDetalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "No de Orden", "Id Producto", "Producto", "Cantidad", "Valor Unitario", "Total Asignado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane9.setViewportView(tblDetalle);

        CONSULTAIE.add(jScrollPane9);
        jScrollPane9.setBounds(330, 230, 680, 190);

        jLabel30.setText("Cabezera:");
        CONSULTAIE.add(jLabel30);
        jLabel30.setBounds(630, 20, 90, 14);

        jLabel31.setText("Detalle:");
        CONSULTAIE.add(jLabel31);
        jLabel31.setBounds(650, 210, 100, 14);

        btnConsultarIE.setText("Consultar Todo");
        btnConsultarIE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarIEActionPerformed(evt);
            }
        });
        CONSULTAIE.add(btnConsultarIE);
        btnConsultarIE.setBounds(80, 160, 160, 23);

        btnEliminarIE.setText("Eliminar Cabezera");
        btnEliminarIE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarIEActionPerformed(evt);
            }
        });
        CONSULTAIE.add(btnEliminarIE);
        btnEliminarIE.setBounds(80, 220, 160, 23);

        btnEliminarDetalle.setText("Eliminar Detalle");
        btnEliminarDetalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarDetalleActionPerformed(evt);
            }
        });
        CONSULTAIE.add(btnEliminarDetalle);
        btnEliminarDetalle.setBounds(80, 280, 160, 23);

        PanelBodega.addTab("CONSULTA I/E", CONSULTAIE);

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(986, 986, 986)
                .addComponent(btnCancelar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(PanelBodega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(PanelBodega, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(btnCancelar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField13ActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:

        Principal P = Principal.getFrame();
        int i = JOptionPane.showConfirmDialog(null, "¿Desea Cancelar?", "Mensaje", JOptionPane.YES_NO_OPTION);
        if (i == JOptionPane.YES_OPTION) {
            P.setVisible(true);
            this.setVisible(false);
            dispose();
        }
    }//GEN-LAST:event_btnCancelarActionPerformed
    private void editor_fecha(){
        //JDateChooser chooser = new JDateChooser();
        JTextFieldDateEditor editor = (JTextFieldDateEditor) jdtFecha.getDateEditor();
        editor.setEditable(false);
        
    }
    /*
    private void modelo_tabla() {
        //ArrayList <EgresoProducto> productos;
        DetalleEgresoProducto newproducto = new DetalleEgresoProducto();
        DefaultTableModel modelo2 = new DefaultTableModel();
        String[] columnas2 = {"No de Orden", "Descripcion", "Producto", "Fecha", "Cantidad", "Valor U", "Total"};
        modelo2.setColumnIdentifiers(columnas2);
    }*/

    private void cargar_productos() {
        Consulta consultadao3 = new Consulta();
      
        listaproductos = consultadao3.llenar_combo();
          String[] items = new String[listaproductos.size()+1];
        cmbProducto.removeAllItems();
        
       
        items[0]="Seleccione";
        for (int i = 0; i < listaproductos.size(); i++) {
            items[i+1]=listaproductos.get(i).toString();
        }
        cmbProducto.setModel(new DefaultComboBoxModel<>(items));
    }

    private void cargar_valores() {
        Consulta consultadao4 = new Consulta();
        listacantidades = consultadao4.llenar_valores();
        String opcion2 = cmbProducto.getSelectedItem().toString();
        String[] datos = opcion2.split("-");
        int id_interno = Integer.parseInt(datos[0]);
        for (int i = 0; i < listacantidades.size(); i++) {
            if (id_interno == listacantidades.get(i).getId()) {
            
                txtValorUnitario.setText(String.valueOf(listacantidades.get(i).getValor_unitario()));
                txtCantidad.setText(String.valueOf(listacantidades.get(i).getCantidad()));
                //SpinnerModel sm = new SpinnerNumberModel(listacantidades.get(i).getCantidad(),1,listacantidades.get(i).getCantidad(),1);
                //spnCantidad.setModel(sm);
                //txtTotal.setText(String.valueOf(listacantidades.get(i).get));
                //spnCantidad.setValue(listacantidades.get(i).getCantidad());
                //SpinnerModel modelo = new SpinnerModel(i, i, i, i) {};
                //spnCantidad.getModel();
            }
        }
    }
    
    private void editor_fechaI(){
        //JDateChooser chooser = new JDateChooser();
        JTextFieldDateEditor editor = (JTextFieldDateEditor) jdtFechaI.getDateEditor();
        editor.setEditable(false);
        
    }
    /*
    private void modelo_tablaI() {
        //ArrayList <EgresoProducto> productos;
        DetalleIngresoProducto newproducto = new DetalleIngresoProducto();
        DefaultTableModel modelo2 = new DefaultTableModel();
        String[] columnas2 = {"No de Orden", "Descripcion", "Producto", "Fecha", "Cantidad", "Valor U", "Total"};
        modelo2.setColumnIdentifiers(columnas2);
    }*/

    private void cargar_productosI() {
        Consulta consultadao3 = new Consulta();
      
        listaproductos = consultadao3.llenar_combo();
          String[] items = new String[listaproductos.size()+1];
        cmbProductoI.removeAllItems();
        
       
        items[0]="Seleccione";
        for (int i = 0; i < listaproductos.size(); i++) {
            items[i+1]=listaproductos.get(i).toString();
        }
        cmbProductoI.setModel(new DefaultComboBoxModel<>(items));
    }

    private void cargar_valoresI() {
        Consulta consultadao4 = new Consulta();
        listacantidades = consultadao4.llenar_valores();
        String opcion2 = cmbProductoI.getSelectedItem().toString();
        String[] datos = opcion2.split("-");
        int id_interno = Integer.parseInt(datos[0]);
        for (int i = 0; i < listacantidades.size(); i++) {
            if (id_interno == listacantidades.get(i).getId()) {
            
                txtValorUnitarioI.setText(String.valueOf(listacantidades.get(i).getValor_unitario()));
                txtCantidadI.setText(String.valueOf(listacantidades.get(i).getCantidad()));
                //SpinnerModel sm = new SpinnerNumberModel(listacantidades.get(i).getCantidad(),1,listacantidades.get(i).getCantidad(),1);
                //spnCantidad.setModel(sm);
                //txtTotal.setText(String.valueOf(listacantidades.get(i).get));
                //spnCantidad.setValue(listacantidades.get(i).getCantidad());
                //SpinnerModel modelo = new SpinnerModel(i, i, i, i) {};
                //spnCantidad.getModel();
            }
        }
    }

    private void insertar_ingreso() {
        DefaultTableModel modelo2 = (DefaultTableModel) tblegresos.getModel();
        DetalleEgresoProducto detalle = new DetalleEgresoProducto();
        Object[] ord2 = new Object[7];

        ord2[0] = txtOrden.getText();
        //ord2[1]=txtDescripcion.getText();
        ord2[1] = cmbProducto.getSelectedItem().toString();
        //ord2[3]=txtFecha.getText();
        ord2[2] = txtCantidad.getText();
       //ord2[2]=spnCantidad.getValue();
        ord2[3] = txtValorUnitario.getText();
        ord2[4] = txtTotal.getText();
        //detalle.setId_egrepro(1);
        String opcion = cmbProducto.getSelectedItem().toString();
        String[] datos = opcion.split("-");
        detalle.setId_pro(Integer.parseInt(datos[0]));
        detalle.setCantidad(Integer.parseInt(txtCantidad.getText()));
        //String cant = String.valueOf(spnCantidad.getValue());
        //detalle.setCantidad(Integer.parseInt(cant));
        detalle.setNo_orden(txtOrden.getText());
        detalle.setValoru(Double.parseDouble(txtValorUnitario.getText()));
        detalle.setTotal(Double.parseDouble(txtTotal.getText()));

        listadetalles.add(detalle);
        modelo2.addRow(ord2);
        
    }
    
    private void insertar_ingresoI() {
        DefaultTableModel modelo2 = (DefaultTableModel) tblIngresos.getModel();
        DetalleIngresoProducto detalle = new DetalleIngresoProducto();
        Object[] ord2 = new Object[7];

        ord2[0] = txtOrdenI.getText();
        //ord2[1]=txtDescripcion.getText();
        ord2[1] = cmbProductoI.getSelectedItem().toString();
        //ord2[3]=txtFecha.getText();
        ord2[2] = txtCantidadI.getText();
       //ord2[2]=spnCantidad.getValue();
        ord2[3] = txtValorUnitarioI.getText();
        ord2[4] = txtTotalI.getText();
        //detalle.setId_egrepro(1);
        String opcion = cmbProductoI.getSelectedItem().toString();
        String[] datos = opcion.split("-");
        detalle.setId_pro(Integer.parseInt(datos[0]));
        detalle.setCantidad(Integer.parseInt(txtCantidadI.getText()));
        //String cant = String.valueOf(spnCantidad.getValue());
        //detalle.setCantidad(Integer.parseInt(cant));
        detalle.setNo_orden(txtOrdenI.getText());
        detalle.setValoru(Double.parseDouble(txtValorUnitarioI.getText()));
        detalle.setTotal(Double.parseDouble(txtTotalI.getText()));

        listadetallesI.add(detalle);
        modelo2.addRow(ord2);
        
    }
    
    private void llenar_tablaProductos(){
        Consulta consultap = new Consulta();
        ArrayList<Producto> lista_productos = new ArrayList<>();
        lista_productos = consultap.consulta_productos();
        DefaultTableModel modelo2 = (DefaultTableModel) tblProductos.getModel();
        for(int i=0; i<lista_productos.size();i++){
           Object[] ord2 = new Object[7];
           ord2[0]= lista_productos.get(i).getId();
           ord2[1]= lista_productos.get(i).getDescripcion();
           ord2[2]= lista_productos.get(i).getTipo_producto();
           ord2[3]= lista_productos.get(i).getCasa_comercial();
           ord2[4]= lista_productos.get(i).getCantidad();
           ord2[5]= lista_productos.get(i).getValor_unitario();
           ord2[6]= lista_productos.get(i).getCantidad()*lista_productos.get(i).getValor_unitario();
           modelo2.addRow(ord2);
        }
        
        
    }
    
    private void llenar_filtroProductos(){
        Consulta consultaf= new Consulta();
        ArrayList<Producto> lista_productos = new ArrayList<>();
        lista_productos = consultaf.filtrar_productos(txtFiltro.getText());
        DefaultTableModel modelo2 = (DefaultTableModel) tblProductos.getModel();
        for(int i=0; i<lista_productos.size();i++){
           Object[] ord2 = new Object[7];
           ord2[0]= lista_productos.get(i).getId();
           ord2[1]= lista_productos.get(i).getDescripcion();
           ord2[2]= lista_productos.get(i).getTipo_producto();
           ord2[3]= lista_productos.get(i).getCasa_comercial();
           ord2[4]= lista_productos.get(i).getCantidad();
           ord2[5]= lista_productos.get(i).getValor_unitario();
           ord2[6]= lista_productos.get(i).getCantidad()*lista_productos.get(i).getValor_unitario();
           modelo2.addRow(ord2);
        }
        
    }
    
    private void llenar_vivo_Productos(){
        Consulta consultaf= new Consulta();
        ArrayList<Producto> lista_productos = new ArrayList<>();
        lista_productos = consultaf.filtrar_vivo_productos(txtFiltro.getText());
        DefaultTableModel modelo2 = (DefaultTableModel) tblProductos.getModel();
        for(int i=0; i<lista_productos.size();i++){
           Object[] ord2 = new Object[7];
           ord2[0]= lista_productos.get(i).getId();
           ord2[1]= lista_productos.get(i).getDescripcion();
           ord2[2]= lista_productos.get(i).getTipo_producto();
           ord2[3]= lista_productos.get(i).getCasa_comercial();
           ord2[4]= lista_productos.get(i).getCantidad();
           ord2[5]= lista_productos.get(i).getValor_unitario();
           ord2[6]= lista_productos.get(i).getCantidad()*lista_productos.get(i).getValor_unitario();
           modelo2.addRow(ord2);
        }
    }
    
    private void eliminar_tablaProductos() {
        DefaultTableModel modelo = (DefaultTableModel) tblProductos.getModel();
        int filas = modelo.getRowCount();
        for (int i = 0; i < filas; i++) {
            modelo.removeRow(0);
            /*int prueba=tblegresos.getModel().getRowCount();
            System.out.println(prueba);*/
            
        }

    }
    
    private void calcularTotal() {
        double num_total = 0;
        num_total = Integer.parseInt(txtCantidad.getText()) * Double.parseDouble(txtValorUnitario.getText());
        //String cant2= String.valueOf(spnCantidad.getValue());
        //num_total = Integer.parseInt(cant2)*Double.parseDouble(txtValorUnitario.getText());
        String cadena = String.format(Locale.US, "%5.2f", num_total);
        txtTotal.setText(cadena);
    }

    private void limpiar() {
        txtOrden.setText(null);
        txtDescripcion.setText(null);
        txtCantidad.setText("0");
        txtValorUnitario.setText("0");
        txtTotal.setText(null);
        //txtFecha.setText(null);
        eliminar_tabla();
        //tblegresos.removeRowSelectionInterval(0, listadetalles.size());

    }
    private void limpiar_seleccione(){
        txtCantidad.setText("0");
        txtValorUnitario.setText("0");
        txtTotal.setText(null);
        txtCantidad.setEditable(false);
    }
    
    private void calcularTotalI() {
        double num_total = 0;
        num_total = Integer.parseInt(txtCantidadI.getText()) * Double.parseDouble(txtValorUnitarioI.getText());
        //String cant2= String.valueOf(spnCantidad.getValue());
        //num_total = Integer.parseInt(cant2)*Double.parseDouble(txtValorUnitario.getText());
        String cadena = String.format(Locale.US, "%5.2f", num_total);
        txtTotalI.setText(cadena);
    }

    private void limpiarI() {
        txtOrdenI.setText(null);
        txtDescripcionI.setText(null);
        txtCantidadI.setText("0");
        txtValorUnitarioI.setText("0");
        txtTotalI.setText(null);
        //txtFecha.setText(null);
        eliminar_tablaI();
        //tblegresos.removeRowSelectionInterval(0, listadetalles.size());

    }
    private void limpiar_seleccioneI(){
        txtCantidadI.setText("0");
        txtValorUnitarioI.setText("0");
        txtTotalI.setText(null);
        txtCantidadI.setEditable(false);
    }

    private void eliminar_tabla() {
        DefaultTableModel modelo = (DefaultTableModel) tblegresos.getModel();
        int filas = modelo.getRowCount();
        for (int i = 0; i < filas; i++) {
            modelo.removeRow(0);
            /*int prueba=tblegresos.getModel().getRowCount();
            System.out.println(prueba);*/
            
        }

    }
    
    private void eliminar_tablaI() {
        DefaultTableModel modelo = (DefaultTableModel) tblIngresos.getModel();
        int filas = modelo.getRowCount();
        for (int i = 0; i < filas; i++) {
            modelo.removeRow(0);
            /*int prueba=tblegresos.getModel().getRowCount();
            System.out.println(prueba);*/
            
        }

    }
    
    private void btnSubirOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubirOrdenActionPerformed
        // TODO add your handling code here:
        KEgreso egreso2 = new KEgreso();
        Ekardex cabezera = new Ekardex();
        cabezera.setNumreq(txtOrden.getText());
        //cabezera.setFecha(txtFecha.getText());
        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
        cabezera.setFecha(formato.format(jdtFecha.getDate()));
        //System.out.println(cabezera.getFecha());
        cabezera.setDescripcion(txtDescripcion.getText());
        cabezera.setEstado("A");
        egreso2.guardar(cabezera);
        for (int i = 0; i < listadetalles.size(); i++) {
            KEgreso egreso = new KEgreso();
            egreso.guardarDetalle(listadetalles.get(i));
            egreso.actualizarInventario(listadetalles.get(i));
        }
        
        // insertar_ingreso();
        //cargar_egresos();
        // limpiar();
        listadetalles = new ArrayList<>();

        limpiar();
    }//GEN-LAST:event_btnSubirOrdenActionPerformed

    private void txtValorUnitarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValorUnitarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValorUnitarioActionPerformed

    private void txtValorUnitarioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorUnitarioKeyReleased
        // TODO add your handling code here:
        /*if(txtValorUnitario.getText().isEmpty()){
            txtValorUnitario.setText("0");
        }
        calcularTotal();*/

    }//GEN-LAST:event_txtValorUnitarioKeyReleased
/**/
    private void btnIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarActionPerformed
        // TODO add your handling code here:
        insertar_ingreso();
    }//GEN-LAST:event_btnIngresarActionPerformed

    private void txtOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOrdenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOrdenActionPerformed

    private void cmbProductoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbProductoItemStateChanged
        // TODO add your handling code here:
        Validaciones.desactivar_boton(cmbProducto, btnIngresar); 
        limpiar_seleccione();
        if(cmbProducto.getSelectedIndex()>0){
           cargar_valores();
           txtCantidad.setEditable(true);
        calcularTotal();
        listacantidades = new ArrayList<Producto>(); 
        }
    }//GEN-LAST:event_cmbProductoItemStateChanged
    
    
    
    private void txtCantidadKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadKeyReleased
        // TODO add your handling code here:
        if(txtCantidad.getText().isEmpty()){
            txtCantidad.setText("0");
        }
        calcularTotal();
    }//GEN-LAST:event_txtCantidadKeyReleased

    
    private void txtCantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadKeyTyped
        // TODO add your handling code here:
        char validar=evt.getKeyChar();
        if(!Character.isDigit(validar)){
            evt.consume();
        }
    }//GEN-LAST:event_txtCantidadKeyTyped
    
    
    private void INGRESOMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_INGRESOMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_INGRESOMouseClicked

    private void txtTituloOrdenIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTituloOrdenIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTituloOrdenIActionPerformed

    private void PanelBodegaAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_PanelBodegaAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_PanelBodegaAncestorAdded

    private void btnSubirOrdenIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubirOrdenIActionPerformed
        // TODO add your handling code here:
        KIngreso egreso2 = new KIngreso();
        Ikardex cabezera = new Ikardex();
        cabezera.setNumreq(txtOrdenI.getText());
        //cabezera.setFecha(txtFecha.getText());
        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
        cabezera.setFecha(formato.format(jdtFechaI.getDate()));
        //System.out.println(cabezera.getFecha());
        cabezera.setDescripcion(txtDescripcionI.getText());
        cabezera.setEstado("A");
        egreso2.guardar(cabezera);
        for (int i = 0; i < listadetallesI.size(); i++) {
            KIngreso egreso = new KIngreso();
            egreso.guardarDetalle(listadetallesI.get(i));
            egreso.actualizarInventario(listadetallesI.get(i));
        }
        
        // insertar_ingreso();
        //cargar_egresos();
        // limpiar();
        listadetallesI = new ArrayList<>();

        limpiarI();
    }//GEN-LAST:event_btnSubirOrdenIActionPerformed

    private void btnIngresarIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarIActionPerformed
        // TODO add your handling code here:
        insertar_ingresoI();
    }//GEN-LAST:event_btnIngresarIActionPerformed

    private void cmbProductoIItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbProductoIItemStateChanged
        // TODO add your handling code here:
        Validaciones.desactivar_boton(cmbProductoI, btnIngresarI); 
        limpiar_seleccioneI();
        if(cmbProductoI.getSelectedIndex()>0){
           cargar_valoresI();
           txtCantidadI.setEditable(true);
        calcularTotalI();
        listacantidades = new ArrayList<Producto>(); 
        }
    }//GEN-LAST:event_cmbProductoIItemStateChanged

    private void txtCantidadIKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadIKeyReleased
        // TODO add your handling code here:
        if(txtCantidadI.getText().isEmpty()){
            txtCantidadI.setText("0");
        }
        calcularTotalI();
    }//GEN-LAST:event_txtCantidadIKeyReleased

    private void txtCantidadIKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadIKeyTyped
        // TODO add your handling code here:
        char validar=evt.getKeyChar();
        if(!Character.isDigit(validar)){
            evt.consume();
        }
    }//GEN-LAST:event_txtCantidadIKeyTyped

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        // TODO add your handling code here:
        eliminar_tablaProductos();
        llenar_tablaProductos();
    }//GEN-LAST:event_btnConsultarActionPerformed
    /**/
    private void txtFiltroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroKeyReleased
        // TODO add your handling code here:
        eliminar_tablaProductos();
        
        if (txtFiltro.getText().isEmpty()){
            eliminar_tablaProductos();
        }
        else{
            llenar_vivo_Productos();
        }
    }//GEN-LAST:event_txtFiltroKeyReleased

    private void btnEliminarPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarPActionPerformed
        // TODO add your handling code here:
        if(tblProductos.getSelectedRow()>=0){
            Consulta consultae = new Consulta();
            consultae.eliminar_productos(tblProductos);
            eliminar_tablaProductos();
            llenar_vivo_Productos();
        }
        
        
    }//GEN-LAST:event_btnEliminarPActionPerformed

    private void btnConsultarIEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarIEActionPerformed
        // TODO add your handling code here:
        eliminar_tablaIE();
        if(cmbTipoOrden.getSelectedIndex()==1){
            llenar_tablaI();
        }
        else if(cmbTipoOrden.getSelectedIndex()==2){
            llenar_tablaE();
        }
    }//GEN-LAST:event_btnConsultarIEActionPerformed

    private void cmbTipoOrdenItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbTipoOrdenItemStateChanged
        // TODO add your handling code here:
        Validaciones.desactivar_boton(cmbTipoOrden, btnConsultarIE);
        Validaciones.desactivar_boton(cmbTipoOrden, btnEliminarIE);
        Validaciones.desactivar_boton(cmbTipoOrden, btnEliminarDetalle);
        Validaciones.desactivar_campotexto(cmbTipoOrden, txtOrdenConsulta);
        eliminar_tablaIE();
        eliminar_tablaDetalle();
        
    }//GEN-LAST:event_cmbTipoOrdenItemStateChanged

    private void tblCabezeraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCabezeraMouseClicked
        // TODO add your handling code here:
        mostrar_detalle();
        
    }//GEN-LAST:event_tblCabezeraMouseClicked

    private void mostrar_detalle(){
        eliminar_tablaDetalle();
        ConsultaIE consultaC = new ConsultaIE();
        if(cmbTipoOrden.getSelectedIndex()==1){
            ArrayList<DetalleIngresoProducto> lista_dingresos = new ArrayList<>();
        DefaultTableModel modelo2 = (DefaultTableModel) tblCabezera.getModel();
        DefaultTableModel modelo3 = (DefaultTableModel) tblDetalle.getModel();
        String dato=String.valueOf(modelo2.getValueAt(tblCabezera.getSelectedRow(),0));
        lista_dingresos = consultaC.llenar_detalleI(dato);
        for(int i=0; i<lista_dingresos.size();i++){
           Producto p =consultaC.llenar_detalleIP(lista_dingresos.get(i).getId_pro());
           Object[] ord2 = new Object[7];
           ord2[0]= lista_dingresos.get(i).getId_ingpro();
           ord2[1]= lista_dingresos.get(i).getNo_orden();
           ord2[2]= p.getId();
           ord2[3]= p.getDescripcion();
           ord2[4]= lista_dingresos.get(i).getCantidad();
           ord2[5]= p.getValor_unitario();
           ord2[6]= lista_dingresos.get(i).getCantidad()*p.getValor_unitario();
           //agregar_boton();
           modelo3.addRow(ord2);
        }
        }
        else if(cmbTipoOrden.getSelectedIndex()==2){
            ArrayList<DetalleEgresoProducto> lista_degresos = new ArrayList<>();
        DefaultTableModel modelo2 = (DefaultTableModel) tblCabezera.getModel();
        DefaultTableModel modelo3 = (DefaultTableModel) tblDetalle.getModel();
        String dato=String.valueOf(modelo2.getValueAt(tblCabezera.getSelectedRow(),0));
        lista_degresos = consultaC.llenar_detalleE(dato);
        for(int i=0; i<lista_degresos.size();i++){
           Producto p =consultaC.llenar_detalleIP(lista_degresos.get(i).getId_pro());
           Object[] ord2 = new Object[7];
           ord2[0]= lista_degresos.get(i).getId_egrepro();
           ord2[1]= lista_degresos.get(i).getNo_orden();
           ord2[2]= p.getId();
           ord2[3]= p.getDescripcion();
           ord2[4]= lista_degresos.get(i).getCantidad();
           ord2[5]= p.getValor_unitario();
           ord2[6]= lista_degresos.get(i).getCantidad()*p.getValor_unitario();
           //agregar_boton();
           modelo3.addRow(ord2);
        }
            
        }
    }
    private void txtOrdenConsultaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOrdenConsultaKeyReleased
        // TODO add your handling code here:
        eliminar_tablaIE();
        eliminar_tablaDetalle();
        
        if (txtOrdenConsulta.getText().isEmpty()){
            eliminar_tablaIE();
        }
        else if(cmbTipoOrden.getSelectedIndex()==1){
            llenar_vivo_CabezeraI();
        } else if(cmbTipoOrden.getSelectedIndex()==2){
            llenar_vivo_CabezeraE();
        }
    }//GEN-LAST:event_txtOrdenConsultaKeyReleased

    private void btnEliminarDetalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarDetalleActionPerformed
        // TODO add your handling code here:
        ConsultaIE consultael = new ConsultaIE();
        KIngreso actP = new KIngreso();
        KEgreso actP2 = new KEgreso();
        DefaultTableModel modelo3 = (DefaultTableModel) tblDetalle.getModel(); //recien agregada
//        String cant=(String) modelo3.getValueAt(tblDetalle.getSelectedRow(),4);//recien agregada
//        String i=(String) modelo3.getValueAt(tblDetalle.getSelectedRow(), 2);
        String canti =String.valueOf(modelo3.getValueAt(tblDetalle.getSelectedRow(),4));
        String ii =String.valueOf(modelo3.getValueAt(tblDetalle.getSelectedRow(),2));
        int cantidad = Integer.parseInt(canti);
        int id = Integer.parseInt(ii);
        if(cmbTipoOrden.getSelectedIndex()==1){
            actP.actualizarInventarioEliminar(id, cantidad); //recien agregada
            consultael.eliminar_DetalleI(tblDetalle);
            mostrar_detalle();
            
        } else if(cmbTipoOrden.getSelectedIndex()==2){
            actP2.actualizarInventarioEliminar(id, cantidad);
            consultael.eliminar_DetalleE(tblDetalle);
            mostrar_detalle();
            //proceso completado
        }
    }//GEN-LAST:event_btnEliminarDetalleActionPerformed

    private void btnEliminarIEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarIEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEliminarIEActionPerformed
    
    private void llenar_tablaE(){
        ConsultaIE consultaE = new ConsultaIE();
        ArrayList<Ekardex> lista_egresos = new ArrayList<>();
        lista_egresos = consultaE.consulta_egresos();
        DefaultTableModel modelo2 = (DefaultTableModel) tblCabezera.getModel();
        for(int i=0; i<lista_egresos.size();i++){
           Object[] ord2 = new Object[5];
           ord2[0]= lista_egresos.get(i).getNumreq();
           ord2[1]= lista_egresos.get(i).getDescripcion();
           ord2[2]= lista_egresos.get(i).getFecha();
           ord2[3]= lista_egresos.get(i).getEstado();
           //agregar_boton();
           modelo2.addRow(ord2);
        }
        
        
    }
    
    private void llenar_tablaI(){
        ConsultaIE consultaIN = new ConsultaIE();
        ArrayList<Ikardex> lista_ingresos = new ArrayList<>();
        lista_ingresos = consultaIN.consulta_ingresos();
        DefaultTableModel modelo2 = (DefaultTableModel) tblCabezera.getModel();
        for(int i=0; i<lista_ingresos.size();i++){
           Object[] ord2 = new Object[5];
           ord2[0]= lista_ingresos.get(i).getNumreq();
           ord2[1]= lista_ingresos.get(i).getDescripcion();
           ord2[2]= lista_ingresos.get(i).getFecha();
           ord2[3]= lista_ingresos.get(i).getEstado();
           //agregar_boton();
           modelo2.addRow(ord2);
        }
        
        
    }
    
    private void eliminar_tablaIE() {
        DefaultTableModel modelo = (DefaultTableModel) tblCabezera.getModel();
        int filas = modelo.getRowCount();
        for (int i = 0; i < filas; i++) {
            modelo.removeRow(0);
            /*int prueba=tblegresos.getModel().getRowCount();
            System.out.println(prueba);*/
            
        }

    }
    
    private void eliminar_tablaDetalle() {
        DefaultTableModel modelo = (DefaultTableModel) tblDetalle.getModel();
        int filas = modelo.getRowCount();
        for (int i = 0; i < filas; i++) {
            modelo.removeRow(0);
            /*int prueba=tblegresos.getModel().getRowCount();
            System.out.println(prueba);*/
            
        }

    }
    
    private void llenar_vivo_CabezeraI(){
        ConsultaIE consultaf= new ConsultaIE();
        ArrayList<Ikardex> lista_ingresos = new ArrayList<>();
        lista_ingresos = consultaf.filtrar_vivo_cabezeraI(txtOrdenConsulta.getText());
        DefaultTableModel modelo2 = (DefaultTableModel) tblCabezera.getModel();
        for(int i=0; i<lista_ingresos.size();i++){
           Object[] ord2 = new Object[5];
           ord2[0]= lista_ingresos.get(i).getNumreq();
           ord2[1]= lista_ingresos.get(i).getDescripcion();
           ord2[2]= lista_ingresos.get(i).getFecha();
           ord2[3]= lista_ingresos.get(i).getEstado();
           modelo2.addRow(ord2);
        }
    }
    
    private void llenar_vivo_CabezeraE(){
        ConsultaIE consultaf= new ConsultaIE();
        ArrayList<Ekardex> lista_egresos = new ArrayList<>();
        lista_egresos = consultaf.filtrar_vivo_cabezeraE(txtOrdenConsulta.getText());
        DefaultTableModel modelo2 = (DefaultTableModel) tblCabezera.getModel();
        for(int i=0; i<lista_egresos.size();i++){
           Object[] ord2 = new Object[5];
           ord2[0]= lista_egresos.get(i).getNumreq();
           ord2[1]= lista_egresos.get(i).getDescripcion();
           ord2[2]= lista_egresos.get(i).getFecha();
           ord2[3]= lista_egresos.get(i).getEstado();
           modelo2.addRow(ord2);
        }
    }
    
    
    
    /*private void agregar_boton(){
    TableColumn agregarColumn;
    agregarColumn = tblCabezera.getColumnModel().getColumn(4);
    agregarColumn.setCellEditor(new myeditor(tblCabezera));
    agregarColumn.setCellRenderer(new myrenderer(true));
    }*/
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Bodega.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Bodega.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Bodega.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Bodega.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Bodega().setVisible(true);
            }
        });
    }
    /*private void cargar_orden() {
        Consulta consultadao = new Consulta();
        lista = consultadao.consulta_ord();
        // mostar la lista de productos en el jTable
        DefaultTableModel modelo = new DefaultTableModel();
        String[] columnas = {"No.Orden", "detalle", "hora_llegada", "hora_salida", "estado"};
        modelo.setColumnIdentifiers(columnas);
        Object[] ord = new Object[5];
        
        for (int i = 0; i < lista.size(); i++) {
            ord[0] = lista.get(i).getId();
            ord[1] = lista.get(i).getDetalle();
            ord[2] = lista.get(i).getSalida();
            ord[3] = lista.get(i).getLlegada();
            ord[4] = lista.get(i).getEstado();
            modelo.addRow(ord);
            
        }
        System.out.println("Ejecutado cargar orden");
        tblOrden.setModel(modelo);
    }

    private void cargar_inv() {
        Consulta consultadao = new Consulta();
        listar = consultadao.consulta_inv();
        // mostar la lista de productos en el jTable
        DefaultTableModel modelo = new DefaultTableModel();
        String[] columnas = {"id", "descripcion", "cantidad"};
        modelo.setColumnIdentifiers(columnas);
        Object[] reserv = new Object[3];
        for (int i = 0; i < listar.size(); i++) {
            reserv[0] = listar.get(i).getId();
            reserv[1] = listar.get(i).getDesc();
            reserv[2] = listar.get(i).getCantidad();
            modelo.addRow(reserv);
        }
        jTable3.setModel(modelo);
    }
     */
 /*private void cargar_egresos(){
        Consulta consultadao2 = new Consulta();
        listaegresos = consultadao2.consulta_egresos();
        // mostar la lista de productos en el jTable
        DefaultTableModel modelo2 = new DefaultTableModel();
        String[] columnas2 = {"No.Orden", "Descripcion", "Cantidad", "Valor U", "Total"};
        modelo2.setColumnIdentifiers(columnas2);
        Object[] ord2 = new Object[5];
        
        for (int i = 0; i < listaegresos.size(); i++) {
            ord2[0] = listaegresos.get(i).getNumreq();
            ord2[1] = listaegresos.get(i).getDescripcion();
            ord2[2] = listaegresos.get(i).getCant();
            ord2[3] = listaegresos.get(i).getValorU();
            ord2[4] = listaegresos.get(i).getTot();
            modelo2.addRow(ord2);
            
        }
        System.out.println("Ejecutado cargar egresos");
        tblegresos.setModel(modelo2);
        
    }*/
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CONSULTAIE;
    private javax.swing.JPanel ConsultaO;
    private javax.swing.JPanel EGRESO;
    private javax.swing.JPanel INGRESO;
    private javax.swing.JPanel IngresoInterno;
    private javax.swing.JPanel Orden;
    private javax.swing.JPanel OrdenInterno;
    private javax.swing.JTabbedPane PanelBodega;
    private javax.swing.JScrollPane ScrollOrden;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnConsultarIE;
    private javax.swing.JButton btnEliminarDetalle;
    private javax.swing.JButton btnEliminarIE;
    private javax.swing.JButton btnEliminarP;
    private javax.swing.JButton btnIngresar;
    private javax.swing.JButton btnIngresarI;
    private javax.swing.JButton btnSubirOrden;
    private javax.swing.JButton btnSubirOrdenI;
    private javax.swing.JComboBox<String> cmbProducto;
    private javax.swing.JComboBox<String> cmbProductoI;
    private javax.swing.JComboBox<String> cmbTipoOrden;
    private javax.swing.JPanel consultaI;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private com.toedter.calendar.JDateChooser jdtFecha;
    private com.toedter.calendar.JDateChooser jdtFechaI;
    private javax.swing.JTable tblCabezera;
    private javax.swing.JTable tblDetalle;
    private javax.swing.JTable tblIngresos;
    private javax.swing.JTable tblOrden;
    private javax.swing.JTable tblProductos;
    private javax.swing.JTable tblegresos;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtCantidadI;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtDescripcionI;
    private javax.swing.JTextField txtFiltro;
    private javax.swing.JTextField txtOrden;
    private javax.swing.JTextField txtOrdenConsulta;
    private javax.swing.JTextField txtOrdenI;
    private javax.swing.JTextField txtTituloOrdenI;
    private javax.swing.JTextField txtTotal;
    private javax.swing.JTextField txtTotalI;
    private javax.swing.JTextField txtValorUnitario;
    private javax.swing.JTextField txtValorUnitarioI;
    // End of variables declaration//GEN-END:variables
}
